// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/clarifai/api/utils/extensions.proto

#include "proto/clarifai/api/utils/extensions.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace clarifai {
namespace api {
namespace utils {
}  // namespace utils
}  // namespace api
}  // namespace clarifai
static constexpr ::PROTOBUF_NAMESPACE_ID::Metadata* file_level_metadata_proto_2fclarifai_2fapi_2futils_2fextensions_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_proto_2fclarifai_2fapi_2futils_2fextensions_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_proto_2fclarifai_2fapi_2futils_2fextensions_2eproto = nullptr;
const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_proto_2fclarifai_2fapi_2futils_2fextensions_2eproto::offsets[1] = {};
static constexpr ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema* schemas = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::Message* const* file_default_instances = nullptr;

const char descriptor_table_protodef_proto_2fclarifai_2fapi_2futils_2fextensions_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n)proto/clarifai/api/utils/extensions.pr"
  "oto\022\022clarifai.api.utils\032 google/protobuf"
  "/descriptor.proto:9\n\020cl_show_if_empty\022\035."
  "google.protobuf.FieldOptions\030\320\206\003 \001(\010:4\n\013"
  "cl_moretags\022\035.google.protobuf.FieldOptio"
  "ns\030\321\206\003 \001(\t:9\n\020cl_default_float\022\035.google."
  "protobuf.FieldOptions\030\332\206\003 \001(\002B\235\001\n\033com.cl"
  "arifai.grpc.api.utilsP\001Zugithub.com/Clar"
  "ifai/clarifai-go-grpc/proto/clarifai/api"
  "/github.com/Clarifai/clarifai-go-grpc/pr"
  "oto/clarifai/api/utils\242\002\004CAIPb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_proto_2fclarifai_2fapi_2futils_2fextensions_2eproto_deps[1] = {
  &::descriptor_table_google_2fprotobuf_2fdescriptor_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_proto_2fclarifai_2fapi_2futils_2fextensions_2eproto_sccs[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_proto_2fclarifai_2fapi_2futils_2fextensions_2eproto_once;
static bool descriptor_table_proto_2fclarifai_2fapi_2futils_2fextensions_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_proto_2fclarifai_2fapi_2futils_2fextensions_2eproto = {
  &descriptor_table_proto_2fclarifai_2fapi_2futils_2fextensions_2eproto_initialized, descriptor_table_protodef_proto_2fclarifai_2fapi_2futils_2fextensions_2eproto, "proto/clarifai/api/utils/extensions.proto", 437,
  &descriptor_table_proto_2fclarifai_2fapi_2futils_2fextensions_2eproto_once, descriptor_table_proto_2fclarifai_2fapi_2futils_2fextensions_2eproto_sccs, descriptor_table_proto_2fclarifai_2fapi_2futils_2fextensions_2eproto_deps, 0, 1,
  schemas, file_default_instances, TableStruct_proto_2fclarifai_2fapi_2futils_2fextensions_2eproto::offsets,
  file_level_metadata_proto_2fclarifai_2fapi_2futils_2fextensions_2eproto, 0, file_level_enum_descriptors_proto_2fclarifai_2fapi_2futils_2fextensions_2eproto, file_level_service_descriptors_proto_2fclarifai_2fapi_2futils_2fextensions_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_proto_2fclarifai_2fapi_2futils_2fextensions_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_proto_2fclarifai_2fapi_2futils_2fextensions_2eproto), true);
namespace clarifai {
namespace api {
namespace utils {
::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::google::protobuf::FieldOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::PrimitiveTypeTraits< bool >, 8, false >
  cl_show_if_empty(kClShowIfEmptyFieldNumber, false);
const std::string cl_moretags_default("");
::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::google::protobuf::FieldOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::StringTypeTraits, 9, false >
  cl_moretags(kClMoretagsFieldNumber, cl_moretags_default);
::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::google::protobuf::FieldOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::PrimitiveTypeTraits< float >, 2, false >
  cl_default_float(kClDefaultFloatFieldNumber, 0);

// @@protoc_insertion_point(namespace_scope)
}  // namespace utils
}  // namespace api
}  // namespace clarifai
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
